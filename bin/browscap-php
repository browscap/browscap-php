#!/usr/bin/env php
<?php

if (version_compare('7.1.0', PHP_VERSION, '>')) {
  fwrite(
    STDERR,
    sprintf(
      'This version of BrowscapPHP is supported on PHP 7.1, PHP 7.2, PHP 7.3 and PHP 7.4.' . PHP_EOL .
      'You are using PHP %s (%s).' . PHP_EOL,
      PHP_VERSION,
      PHP_BINARY
    )
  );

  die(1);
}

if (!ini_get('date.timezone')) {
  ini_set('date.timezone', 'UTC');
}

$baseDir = dirname(__DIR__);

$autoloadPaths = array(
    $baseDir . '/vendor/autoload.php',
    $baseDir . '/../vendor/autoload.php',
    $baseDir . '/../../autoload.php',
);

$foundVendorAutoload = false;
foreach ($autoloadPaths as $path) {
    if (file_exists($path)) {
        require $path;
        $foundVendorAutoload = true;
        break;
    }
}

if (!$foundVendorAutoload) {
  fwrite(
    STDERR,
    'You need to set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
    '    composer install' . PHP_EOL . PHP_EOL .
    'You can learn all about Composer on https://getcomposer.org/.' . PHP_EOL
  );

  die(1);
}

// Ensure symfony packages installed
if (!class_exists(\Symfony\Component\Console\Application::class)) {
  echo 'You must include the symfony packages, see composer.json "suggest" section' . PHP_EOL;
  exit(1);
}

use Symfony\Component\Console\Application;
use BrowscapPHP\Command;

$cacheDirectory = $baseDir . '/resources/';
$defaultIniFile = $baseDir . '/resources/browscap.ini';

$application = new Application('browscap.php');

$loggerHelper = new Command\Helper\LoggerHelper();
$application->getHelperSet()->set($loggerHelper);

$application->add(new Command\ConvertCommand($cacheDirectory, $defaultIniFile));
$application->add(new Command\UpdateCommand($cacheDirectory));
$application->add(new Command\ParserCommand($cacheDirectory));
$application->add(new Command\FetchCommand($cacheDirectory, $defaultIniFile));
$application->add(new Command\CheckUpdateCommand($cacheDirectory));

ini_set('memory_limit', '512M');

$application->run();
